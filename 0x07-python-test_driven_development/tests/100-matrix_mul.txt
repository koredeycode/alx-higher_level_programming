>>> f = __import__("100-matrix_mul").matrix_mul
>>> f([[3, 2], [4, 5]], [[3, 2], [4, 5]])
[[17, 16], [32, 33]]
>>> try:
...     f("matrixa", [[3, 2], [4, 5]])
... except Exception as e:
...     print(e)
...
m_a must be a list
>>> try:
...     f([[3, 2], [4, 5]], "matrixb")
... except Exception as e:
...     print(e)
...
m_b must be a list
>>> try:
...     f([3, 2, 4, 5], [[3, 2], [4, 5]])
... except Exception as e:
...     print(e)
...
m_a must be a list of lists
>>> try:
...     f([[3, 2], [4, 5]], [3, 2, 4, 5])
... except Exception as e:
...     print(e)
...
m_b must be a list of lists
>>> try:
...     f([[]], [[3, 2], [4, 5]])
... except Exception as e:
...     print(e)
...
m_a can't be empty
>>> try:
...     f([[3, 2], [4, 5]], [[]])
... except Exception as e:
...     print(e)
...
m_b can't be empty
>>> try:
...     f([["3", "2"], ["4", "5"]], [[3, 2], [4, 5]])
... except Exception as e:
...     print(e)
...
m_a should contain only integers or floats
>>> try:
...     f([[3, 2], [4, 5]], [["3", "2"], ["4", "5"]])
... except Exception as e:
...     print(e)
...
m_b should contain only integers or floats
>>> try:
...     f([[3, 2], [4, 5, 6]], [[3, 2], [4, 5]])
... except Exception as e:
...     print(e)
...
each row of m_a must be of the same size
>>> try:
...     f([[3, 2], [4, 5]], [[3, 2], [4, 5, 6]])
... except Exception as e:
...     print(e)
...
each row of m_b must be of the same size
>>> try:
...     f([[3, 2], [4, 5]], [[3, 2], [4, 5], [6, 7]])
... except Exception as e:
...     print(e)
...
m_a and m_b can't be multiplied
>>> try:
...     f([[3, 2], [4, 5]])
... except Exception as e:
...     print(e)
...
matrix_mul() missing 1 required positional argument: 'm_b'
>>> try:
...     f()
... except Exception as e:
...     print(e)
...
matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
